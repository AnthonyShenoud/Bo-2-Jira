name: Sync GitHub Issues to Jira

on:
  issues:
    types: [opened, edited, labeled, unlabeled]
  issue_comment:
    types: [created]
  project_card:
    types: [moved]

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get install jq

      - name: Sync GitHub issue/comment to Jira
        env:
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER: anthony.ashenouda@gmail.com
          JIRA_DOMAIN: anthonyashenouda.atlassian.net
        run: |
          echo "üì¶ Reading GitHub event..."

          if [[ ! -f "$GITHUB_EVENT_PATH" ]]; then
            echo "‚ùå GITHUB_EVENT_PATH not found."
            exit 1
          fi

          issue_title=$(jq -r '.issue.title' "$GITHUB_EVENT_PATH")
          issue_body=$(jq -r '.issue.body // ""' "$GITHUB_EVENT_PATH")
          comment_body=$(jq -r '.comment.body // ""' "$GITHUB_EVENT_PATH")
          labels=$(jq -r '[.issue.labels[].name] // [] | join(",")' "$GITHUB_EVENT_PATH")
          echo "üìå Issue Title: $issue_title"
          echo "üí¨ Comment Body: $comment_body"
          echo "üè∑Ô∏è Labels: $labels"

          if [[ "$issue_title" =~ ([A-Z]+-[0-9]+) ]]; then
            jira_key="${BASH_REMATCH[1]}"
            echo "üîó Found Jira key: $jira_key"
          else
            echo "‚ùå No Jira issue key found in title."
            exit 0
          fi

          JIRA_BASE_URL="https://$JIRA_DOMAIN"
          auth_header=$(echo -n "$JIRA_USER:$JIRA_API_TOKEN" | base64 | tr -d '\n')

          ##############################
          # üß† Check for /status command
          ##############################
          if [[ "$comment_body" =~ ^/status[[:space:]]+([a-zA-Z]+)$ ]]; then
            status_command="${BASH_REMATCH[1],,}"

            echo "ü™Ñ Detected /status command: $status_command"

            case "$status_command" in
              done) transition_id=31 ;;
              inreview) transition_id=2 ;;
              inprogress) transition_id=21 ;;
              ready) transition_id=11 ;;
              backlog) transition_id=3 ;;
              *)
                echo "‚ùå Invalid status: $status_command"
                exit 0
                ;;
            esac

            echo "üîÅ Transitioning Jira issue $jira_key to ID $transition_id"
            curl -s -X POST \
              -H "Authorization: Basic $auth_header" \
              -H "Content-Type: application/json" \
              --data "{ \"transition\": { \"id\": \"$transition_id\" } }" \
              "$JIRA_BASE_URL/rest/api/3/issue/$jira_key/transitions"

            echo "‚úÖ Transition complete."
            exit 0
          fi

          ##############################
          # ‚úçÔ∏è Default comment sync
          ##############################
          comment_text="${comment_body:-$issue_body}"
          if [[ -n "$comment_text" ]]; then
            payload=$(jq -n --arg text "$comment_text" \
              '{
                body: {
                  type: "doc",
                  version: 1,
                  content: [
                    {
                      type: "paragraph",
                      content: [
                        {
                          type: "text",
                          text: $text
                        }
                      ]
                    }
                  ]
                }
              }')

            jira_url="$JIRA_BASE_URL/rest/api/3/issue/$jira_key/comment"
            echo "üì§ Posting to Jira: $jira_url"
            http_status=$(curl -s -w "%{http_code}" -o response.json -X POST \
              -H "Authorization: Basic $auth_header" \
              -H "Content-Type: application/json" \
              --data "$payload" \
              "$jira_url")

            echo "üì• HTTP Status: $http_status"
            cat response.json || echo "(empty)"

            if [[ "$http_status" -ge 400 ]]; then
              echo "‚ùå Jira update failed."
              exit 43
            else
              echo "‚úÖ Jira issue updated."
            fi
          fi

          ##############################
          # üö¶ Label-based transition
          ##############################
          if [[ "$GITHUB_EVENT_NAME" == "issues" ]]; then
            transition_id=""
            if [[ "$labels" == *"done"* ]]; then transition_id=31
            elif [[ "$labels" == *"inprogress"* ]]; then transition_id=21
            elif [[ "$labels" == *"inreview"* ]]; then transition_id=2
            elif [[ "$labels" == *"ready"* ]]; then transition_id=11
            elif [[ "$labels" == *"backlog"* ]]; then transition_id=3
            fi

            if [[ -n "$transition_id" ]]; then
              echo "üîÑ Transitioning Jira issue $jira_key to ID $transition_id..."
              curl -s -X POST \
                -H "Authorization: Basic $auth_header" \
                -H "Content-Type: application/json" \
                --data "{ \"transition\": { \"id\": \"$transition_id\" } }" \
                "$JIRA_BASE_URL/rest/api/3/issue/$jira_key/transitions"
              echo "‚úÖ Transition applied based on label."
            fi
          fi
